{"ast":null,"code":"var _jsxFileName = \"/Users/chakchak/Documents/Dev/tinder-clone/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport Nav from '../components/Nav';\nimport { useState } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const characters = [{\n    name: 'Richard Hendricks',\n    url: 'https://imgur.com/t/pictures/CVYsXT6'\n  }, {\n    name: 'Erlich Bachman',\n    url: './img/erlich.jpg'\n  }, {\n    name: 'Monica Hall',\n    url: './img/monica.jpg'\n  }, {\n    name: 'Jared Dunn',\n    url: './img/jared.jpg'\n  }, {\n    name: 'Dinesh Chugtai',\n    url: 'https://i.imgur.com/VtQIIdy.gif'\n  }];\n  const [lastDirection, setLastDirection] = useState();\n  const swiped = (direction, nameToDelete) => {\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        onSwipe: dir => swiped(dir, character.name),\n        onCardLeftScreen: () => outOfFrame(character.name),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: 'url(' + character.url + ')'\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swipe-info\",\n      children: lastDirection ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You swiped \", lastDirection]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 70\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"rySX5g2mQ2fs0lr7ni3s2dLmgZU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Nav","useState","TinderCard","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","characters","name","url","lastDirection","setLastDirection","swiped","direction","nameToDelete","console","log","outOfFrame","className","children","map","character","onSwipe","dir","onCardLeftScreen","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chakchak/Documents/Dev/tinder-clone/src/pages/Dashboard.js"],"sourcesContent":["import Nav from '../components/Nav'\nimport { useState } from 'react'\nimport TinderCard from 'react-tinder-card'\n\nimport { useNavigate } from 'react-router-dom'\n\n\nconst Dashboard = () => {\n\n    const characters =\n        [\n            {\n                name: 'Richard Hendricks',\n                url: 'https://imgur.com/t/pictures/CVYsXT6'\n            },\n            {\n                name: 'Erlich Bachman',\n                url: './img/erlich.jpg'\n            },\n            {\n                name: 'Monica Hall',\n                url: './img/monica.jpg'\n            },\n            {\n                name: 'Jared Dunn',\n                url: './img/jared.jpg'\n            },\n            {\n                name: 'Dinesh Chugtai',\n                url: 'https://i.imgur.com/VtQIIdy.gif'\n            }\n        ]\n    const [lastDirection, setLastDirection] = useState()\n\n\n\n    const swiped = (direction, nameToDelete) => {\n        console.log('removing: ' + nameToDelete)\n        setLastDirection(direction)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + ' left the screen!')\n    }\n\n\n\n    return (\n        <div className='dashboard'>\n\n            <div className='cardContainer'>\n                {characters.map((character) =>\n                    <TinderCard className='swipe'\n                        key={character.name}\n                        onSwipe={(dir) => swiped(dir, character.name)}\n                        onCardLeftScreen={() => outOfFrame(character.name)}>\n                        <div style={{ backgroundImage: 'url(' + character.url + ')' }}\n                            className='card'>\n                            <h3>{character.name}</h3>\n                        </div>\n                    </TinderCard>\n                )}\n            </div>\n            <div className=\"swipe-info\">\n                {lastDirection ? <p>You swiped {lastDirection}</p> : <p/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}